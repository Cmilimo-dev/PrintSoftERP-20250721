version: '3.8'

services:
  printsoft-erp:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: printsoft-erp-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # For HTTPS if using SSL termination
    environment:
      - NODE_ENV=production
    volumes:
      # Optional: Mount SSL certificates if handling HTTPS at container level
      # - ./ssl:/etc/nginx/ssl:ro
      # Optional: Mount custom nginx config
      # - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Mount logs for monitoring
      - ./logs/nginx:/var/log/nginx
    labels:
      - "traefik.enable=true"  # If using Traefik
      - "traefik.http.routers.printsoft-erp.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.printsoft-erp.tls=true"
      - "traefik.http.routers.printsoft-erp.tls.certresolver=letsencrypt"
    networks:
      - printsoft-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Optional: Add monitoring services
  prometheus:
    image: prom/prometheus:latest
    container_name: printsoft-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - printsoft-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: printsoft-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change this!
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - printsoft-network
    profiles:
      - monitoring

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: printsoft-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - printsoft-network
    profiles:
      - cache

networks:
  printsoft-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
